input=: cutLF(0 : 0)
[[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]]
[[[5,[2,8]],4],[5,[[9,9],0]]]
[6,[[[6,2],[5,6]],[[7,6],[4,7]]]]
[[[6,[0,7]],[0,9]],[4,[9,[9,0]]]]
[[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]]
[[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]]
[[[[5,4],[7,7]],8],[[8,3],8]]
[[9,3],[[9,9],[6,[4,9]]]]
[[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]]
[[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]]
)

input=: 'b'fread'input18'

depth=: '[],'&(-.@e.~#(1 _1 0 0 +/\@:{~ i.))
numbers=: ".@:(#~(-.@e.)&'[]')
digits=: ([:#10&#.inv)"0
format=: depth(];(#~;@:({.&1&.>)@:digits))numbers
input=: format&.>input
explode=: 3 : 0
 'n d'=. y
 if. 5 e. d do.
  p=. 2{.I.5=d
  m=. 0,n,0
  s=. 0({.p)}}:}.((m{~>:p)+m{~0 2+p)(0 2+p)}m
  t=. 0({:p)}1#~#n
  d=. t#4({.p)}d
  d;~s=. t#s
 end.
)
split=: 3 : 0
 'n d'=. y
 if. (#n)>i=. 1 i.~ 10<:n do.
  n=. (i{.n),(<.-:i{n),(>.-:i{n),n}.~i+1
  d=. (i{.d),(2#>:i{d),d}.~i+1
 end.n;d
)
concat=: ,&.>&{.,(1+,)&.>&{:
add=: (split@:(explode^:_))^:_@:concat
sum=: >add~&.>/|.input
join=: 3 : 0
 'n d'=. y
 if. -.d-:,0 do.
  i=. _2<\I.(=>./)d
  t=. 0({:&>i)}1#~#n
  n=. t#({&n&.>i)({.&>i)}n
  d=. (-(=>./))d
  n;t#d
 end.
)
magnitude=: (3 2+/@:*$:&>)^:(2=#)
prep=: <"0&.>@:{.,{:
solution1=: magnitude,>0{::join^:_ prep sum
solution2=: >./;magnitude&.>(,@:>)&.>(0{::join^:_)&.>prep&.>add&.>"0/~input