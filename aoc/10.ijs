input=: cutLF(0 : 0)
[({(<(())[]>[[{[]{<()<>>
[(()[<>])]({[<{<<[]>>(
{([(<{}[<>[]}>{[]{[(<()>
(((({<>}<{<{<>}{[]{[]{}
[[<[([]))<([[{}[[()]]]
[{[{({}]{}}([{[{{{}}([]
{<[[]]>}<{[{[{[]{()[[[]
[<(<(<(<{}))><([]([]()
<{([([[(<>()){}]>(<<{{
<{([{{}}[<[[[<>{}]]]>[]]
)

input=: 'b'fread'input10'

E=: '([{<)]}>'
VALID=: _2]\E i.'()[]{}<>'
reduce=: {{y#~0~:(,&1*1&,)-.2 e.&VALID\E i.y}}
valid=: E i.reduce^:(0<#)^:_
corrupted=: t#~(<0 0)=s=. ((0=#),4*./@:>])&.>t=. valid&.>input
solution1=: +/3 57 1197 25137{~_4+({~(4&<: i. 1:))&>corrupted

incomplete=: t#~(<0 1)=s
solution2=: ({~<.@-:@#)\:~((+5&*)/@:>:)&>incomplete